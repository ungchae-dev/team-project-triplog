plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.javago'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	// developmentOnly: 개발 환경에서만 적용. 실행 환경(JAR/WAR 빌드시) 에는 포함되지 않도록 함.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	implementation 'org.jsoup:jsoup:1.20.1'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.4.Final'
	implementation 'org.json:json:20240303'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // 회원가입 페이지에서 서버로 넘어오는 값 검증
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.4'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'

	// QueryDSL (JPA Jakarta 대응)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

	// Jakarta API (Spring Boot 3.x는 jakarta 기반)
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'


	def generated = "$buildDir/generated/querydsl"

	sourceSets {
		main {
			java {
				srcDirs = ['src/main/java', "$buildDir/generated/querydsl"]
			}
		}
	}

	tasks.withType(JavaCompile) {
		options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/querydsl")
	}

}

test {
	useJUnitPlatform()
}